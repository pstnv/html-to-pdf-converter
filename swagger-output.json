{
  "swagger": "2.0",
  "info": {
    "title": "Convert HTML to PDF",
    "description": "Микросервис конвертирования HTML-файлов в PDF",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "servers": [
    {
      "url": "http://localhost:5000/",
      "description": "local server"
    },
    {
      "url": "http://localhost:5000/",
      "description": "production server"
    }
  ],
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "User fills in the registration form - name, email, password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "The request body contains name, email, password",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Your email has been successfully  . Please check your email to complete your profile"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User   successfully"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "This email is already  "
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User registration failed. The email is already registered"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User registration failed. Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/verify-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify new user email",
        "description": "User gets an email with a link to complete registration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The request body contains email and verificationToken",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Your email has been successfully confirmed. Please login with your email and password"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User completed registration"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Verification failed"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User completion of registration failed"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User completion of registration failed. Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login a user",
        "description": "User fills in the login form - email, password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The request body contains email, password",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/TokenUser"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User logged in successfully"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "The field name (email or password) is required"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User login failed. Missing name (email or password)"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Wrong password/ Invalid credentials"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User login failed. Invalid credentials"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User login failed. Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out a user",
        "description": "User clicked the button \"Logout\"",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "User logged out"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User logged out"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User logout failed. Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User forgot password",
        "description": "User fills in the form - email",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The request body contains user email",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ForgotUserPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Please check the email for instructions to reset your password"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Link to reset password was sent to the user email"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "The field email is required"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Reset password failed. Missing email"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Reset password failed. Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset user password",
        "description": "User fills in the form - email, password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The request body contains token, email, password",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ResetUserPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "The password was changed. Please use new password to login"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User has changed password"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Link has expired"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Changing password failed. Link has expired"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Changing password failed. Internal server error"
          }
        }
      }
    },
    "/api/v1/tasks/": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Fetch all tasks",
        "description": "User must be authorized",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "example": 1
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Conversion"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Tasks successfully fetched"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/tasks/html_to_pdf": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete the task",
        "description": "User must be authorized",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The request params contains task id",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/DeleteTask"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body contains user id and params - task id",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/DeleteTaskUser"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Task deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Task deleted successfully"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "The task not found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Task deletion failed. The task not found"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/users/showMe": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/updateUser": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/updateUserPassword": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/updateUserEmail": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "newEmail": {
                  "example": "any"
                },
                "newEmailRepeat": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/verifyUpdatedUserEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verificationToken": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Shura"
        },
        "email": {
          "type": "string",
          "example": "shura@example.com"
        },
        "password": {
          "type": "string",
          "example": "secret"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "shura@example.com"
        },
        "password": {
          "type": "string",
          "example": "secret"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "TokenUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Shura"
        },
        "userId": {
          "type": "string",
          "example": "666be590c71440513405199c"
        }
      },
      "required": [
        "name",
        "userId"
      ]
    },
    "VerifyUser": {
      "type": "object",
      "properties": {
        "verificationToken": {
          "type": "string",
          "example": "verificationToken"
        },
        "email": {
          "type": "string",
          "example": "shura@example.com"
        }
      },
      "required": [
        "verificationToken",
        "email"
      ]
    },
    "ForgotUserPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "shura@example.com"
        }
      },
      "required": [
        "email"
      ]
    },
    "ResetUserPassword": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "token"
        },
        "email": {
          "type": "string",
          "example": "shura@example.com"
        },
        "password": {
          "type": "string",
          "example": "secret"
        }
      },
      "required": [
        "token",
        "email",
        "password"
      ]
    },
    "Conversion": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6669fa927fee84f72b3c2282"
        },
        "name": {
          "type": "string",
          "example": "success.arch.pdf"
        },
        "status": {
          "type": "boolean",
          "example": true
        },
        "createdBy": {
          "type": "string",
          "example": "6666aff21c2e29132a56f32f"
        },
        "file": {
          "type": "string",
          "example": "https://res.cloudinary.com/dx1bfr5u6/image/upload/v1718221457/converte…"
        },
        "cloudId": {
          "type": "string",
          "example": "converter-upload/fpjwsfcbmzd63kyzhhtb"
        },
        "createdAt": {
          "type": "string",
          "example": "2024-06-12T19:44:18.649+00:00"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-06-12T19:44:18.649+00:00"
        }
      },
      "required": [
        "_id",
        "name",
        "status",
        "createdBy",
        "file",
        "cloudId",
        "createdAt",
        "updatedAt"
      ]
    },
    "DeleteTask": {
      "type": "string",
      "example": "6669fa927fee84f72b3c2282"
    },
    "DeleteTaskUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "6666aff21c2e29132a56f32f"
        }
      }
    }
  }
}